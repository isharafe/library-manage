/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SettingsAdmin.java
 *
 * Created on Jan 5, 2013, 11:07:22 AM
 */
package gui;

import Classes.GuiManager;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.jvnet.substance.SubstanceLookAndFeel;
import javax.swing.JFrame;
import javax.swing.WindowConstants;
import Classes.Permission;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static Db.DB.*;

/**
 *
 * @author Group 20
 */
public class SettingsAdmin extends javax.swing.JPanel {

    /** Creates new form SettingsAdmin */
    DefaultTableModel tbl;
    JFrame jf;

    public SettingsAdmin() {
        initComponents();
        tbl = (DefaultTableModel) tblPermission.getModel();

        try {
            Statement stmt = getConnection().createStatement();
            ResultSet rset = stmt.executeQuery("SELECT gui_id, gui_name FROM gui ORDER BY gui_id");
            while (rset.next()) {
                ArrayList ast = new ArrayList();
                ast.add(rset.getInt(1));
                ast.add(false);
                ast.add(rset.getString(2));
                if ((Integer) ast.get(0) != 99) {
                    tbl.addRow(ast.toArray());
                }
            }
            rset.close();
            stmt.close();
        } catch (Exception ex) {
            Logger.getLogger(ManageBooksLend.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void showSettingsAdmin() {
        try {
            UIManager.setLookAndFeel(new SubstanceLookAndFeel());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(SettingsAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        jf = new JFrame("First Run");
        jf.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        jf.add(this);
        jf.setResizable(false);
        jf.addWindowListener(new java.awt.event.WindowAdapter() {

            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                try {
                    Statement stmt = getConnection().createStatement();
                    ResultSet rset = stmt.executeQuery("SELECT * FROM permission");
                    if (!rset.next()) {
                        Statement stmt2 = getConnection().createStatement();
                        stmt2.execute("DROP DATABASE " + Db.DB.dbName);
                        stmt2.close();
                    }
                    rset.close();
                    stmt.close();
                } catch (Exception ex) {
                    Logger.getLogger(SettingsAdmin.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });
        jf.pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        jf.setBounds((screenSize.width - 541) / 2, (screenSize.height - 488) / 2, this.getWidth(), this.getHeight());
        GuiManager.sa = this;
        GuiManager.refreshMemberType();
        jf.setVisible(true);

    }

    private void selectAllOptions(boolean b) {
        for (int i = 0; i < tblPermission.getRowCount(); i++) {
            tblPermission.setValueAt(b, i, 1);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAdminSetings = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tblPermission = new javax.swing.JTable();
        jPanel18 = new javax.swing.JPanel();
        jLabel65 = new javax.swing.JLabel();
        jPanel33 = new javax.swing.JPanel();
        lblMainMemberID2 = new javax.swing.JLabel();
        cmbMemberType = new javax.swing.JComboBox();
        btnResiveMainEnter3 = new javax.swing.JButton();
        chkSelectAll = new javax.swing.JCheckBox();

        setBackground(new java.awt.Color(153, 153, 153));

        pnlAdminSetings.setBackground(new java.awt.Color(204, 204, 204));

        jPanel13.setBackground(new java.awt.Color(204, 204, 204));
        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Permissions"));

        tblPermission.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Interface ID", "Select", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(tblPermission);
        tblPermission.getColumnModel().getColumn(0).setPreferredWidth(2);
        tblPermission.getColumnModel().getColumn(1).setPreferredWidth(10);
        tblPermission.getColumnModel().getColumn(2).setPreferredWidth(400);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel18.setBackground(new java.awt.Color(153, 153, 153));
        jPanel18.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel65.setFont(new java.awt.Font("Tahoma", 1, 24));
        jLabel65.setForeground(new java.awt.Color(255, 255, 255));
        jLabel65.setText("Administrator Service ");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap(466, Short.MAX_VALUE)
                .addComponent(jLabel65)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel65)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel33.setBackground(new java.awt.Color(153, 153, 153));
        jPanel33.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 741, Short.MAX_VALUE)
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        lblMainMemberID2.setFont(new java.awt.Font("Tahoma", 1, 12));
        lblMainMemberID2.setText("Member Type :");

        cmbMemberType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Type" }));
        cmbMemberType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMemberTypeActionPerformed(evt);
            }
        });

        btnResiveMainEnter3.setFont(new java.awt.Font("Tahoma", 1, 12));
        btnResiveMainEnter3.setText("Save");
        btnResiveMainEnter3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResiveMainEnter3ActionPerformed(evt);
            }
        });

        chkSelectAll.setFont(new java.awt.Font("Tahoma", 1, 11));
        chkSelectAll.setText("Select All");
        chkSelectAll.setOpaque(false);
        chkSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSelectAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAdminSetingsLayout = new javax.swing.GroupLayout(pnlAdminSetings);
        pnlAdminSetings.setLayout(pnlAdminSetingsLayout);
        pnlAdminSetingsLayout.setHorizontalGroup(
            pnlAdminSetingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminSetingsLayout.createSequentialGroup()
                .addGroup(pnlAdminSetingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAdminSetingsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlAdminSetingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel33, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlAdminSetingsLayout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(lblMainMemberID2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbMemberType, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(btnResiveMainEnter3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(chkSelectAll, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlAdminSetingsLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlAdminSetingsLayout.setVerticalGroup(
            pnlAdminSetingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminSetingsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlAdminSetingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMemberType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMainMemberID2)
                    .addComponent(btnResiveMainEnter3)
                    .addComponent(chkSelectAll))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(236, 236, 236)
                .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(pnlAdminSetings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(pnlAdminSetings, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnResiveMainEnter3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResiveMainEnter3ActionPerformed
        if (cmbMemberType.getSelectedIndex() != 0) {
            try {
                ArrayList<Integer> ast = new ArrayList<Integer>();
                for (int i = 0; i < tblPermission.getRowCount(); i++) {
                    if (Boolean.parseBoolean(tblPermission.getValueAt(i, 1).toString())) {
                        ast.add(Integer.parseInt(tblPermission.getValueAt(i, 0).toString()));
                    }
                }
                Permission p = new Permission(ast, cmbMemberType.getSelectedItem().toString());
                saveData(p);
                JOptionPane.showMessageDialog(null, "Save success.");
                JOptionPane.showMessageDialog(null, "Please restart application to validate changes.");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "An error occures while saving.");
                Logger.getLogger(SettingsAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (jf != null) {
                jf.dispose();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select the member type first...");
        }
}//GEN-LAST:event_btnResiveMainEnter3ActionPerformed

    private void cmbMemberTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMemberTypeActionPerformed
        try {
            for (int i = 0; i < tblPermission.getRowCount(); i++) {
                tblPermission.setValueAt(false, i, 1);
            }
            Statement stmt = getConnection().createStatement();
            ResultSet rset = stmt.executeQuery("SELECT gui_id FROM permission "
                    + "WHERE member_type='" + cmbMemberType.getSelectedItem().toString() + "'");
            while (rset.next()) {
                for (int i = 0; i < tblPermission.getRowCount(); i++) {
                    if (rset.getInt(1) == Integer.parseInt(tblPermission.getValueAt(i, 0).toString())) {
                        tblPermission.setValueAt(true, i, 1);
                        break;
                    }
                }
            }
            rset.close();
            stmt.close();
        } catch (Exception ex) {
            Logger.getLogger(SettingsAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_cmbMemberTypeActionPerformed

    private void chkSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSelectAllActionPerformed
        selectAllOptions(chkSelectAll.isSelected());
    }//GEN-LAST:event_chkSelectAllActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnResiveMainEnter3;
    private javax.swing.JCheckBox chkSelectAll;
    public javax.swing.JComboBox cmbMemberType;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JLabel lblMainMemberID2;
    private javax.swing.JPanel pnlAdminSetings;
    private javax.swing.JTable tblPermission;
    // End of variables declaration//GEN-END:variables
}
