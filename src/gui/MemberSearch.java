/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MemberSearch.java
 *
 * Created on Jan 5, 2013, 11:05:04 AM
 */
package gui;

import java.sql.Date;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import static Db.DB.*;

/**
 *
 * @author Group 20
 */
public class MemberSearch extends javax.swing.JPanel {

    /** Creates new form MemberSearch */
    DefaultTableModel tbl;
    Classes.Member m;

    public MemberSearch() {
        initComponents();
        tbl = (DefaultTableModel) tblResult.getModel();
        m = new Classes.Member();
        btnSearchMemberUpdate.setVisible(false);
        btnSearchMemberDelete.setVisible(false);
    }

    void enableChangeData() {
        btnSearchMemberUpdate.setVisible(true);
        btnSearchMemberDelete.setVisible(true);
    }

    private void search() {
        try {
            tbl.setRowCount(0);
            String gender = "";
            if (cmbGender.getSelectedIndex() == 1) {
                gender = "M";
            } else if (cmbGender.getSelectedIndex() == 2) {
                gender = "F";
            } else if (cmbGender.getSelectedIndex() == 3) {
                gender = "O";
            }
            Statement stmt = getConnection().createStatement();
            ResultSet rset = stmt.executeQuery("SELECT member_id, name FROM member WHERE "
                    + "member_type='" + cmbMemberType.getSelectedItem().toString() + "' AND "
                    + "member_id LIKE '" + txtSearchMemberId.getText() + "%' AND "
                    + "name LIKE '%" + txtSearchName.getText() + "%' AND "
                    + "gender LIKE '" + gender + "%' AND "
                    + "address LIKE '%" + txtSearchAddress.getText() + "%' AND "
                    + "feedback LIKE '%" + txtFeedBacks.getText() + "%'");

            while (rset.next()) {
                ArrayList ast = new ArrayList();
                ast.add(rset.getString(1));
                ast.add(rset.getString(2));
                tbl.addRow(ast.toArray());
            }
            rset.close();
            stmt.close();
        } catch (Exception ex) {
            Logger.getLogger(BookSearch.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlSearchMember = new javax.swing.JPanel();
        lblSearchMemberId = new javax.swing.JLabel();
        lblSearchMemberType = new javax.swing.JLabel();
        lblSearchSurname = new javax.swing.JLabel();
        lblSearchDob = new javax.swing.JLabel();
        lblSearchGender = new javax.swing.JLabel();
        lblSearchAddress = new javax.swing.JLabel();
        lblSearchTelephone = new javax.swing.JLabel();
        lblSearchEMail = new javax.swing.JLabel();
        txtSearchMemberId = new javax.swing.JTextField();
        txtSearchName = new javax.swing.JTextField();
        txtSearchTelephone = new javax.swing.JTextField();
        txtSearchEMail = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnSearchMemberUpdate = new javax.swing.JButton();
        btnSearchMemberDelete = new javax.swing.JButton();
        btnSearchMemberClear = new javax.swing.JButton();
        lblSearchFeedBacks = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtFeedBacks = new javax.swing.JTextArea();
        cmbMemberType = new javax.swing.JComboBox();
        dtDob = new datechooser.beans.DateChooserCombo();
        cmbGender = new javax.swing.JComboBox();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtSearchAddress = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResult = new javax.swing.JTable();

        setBackground(new java.awt.Color(153, 153, 153));

        pnlSearchMember.setBackground(new java.awt.Color(204, 204, 204));

        lblSearchMemberId.setText("Member ID :");

        lblSearchMemberType.setText("Member Type :");

        lblSearchSurname.setText("Name :");

        lblSearchDob.setText("D.O.B :");

        lblSearchGender.setText("Gender :");

        lblSearchAddress.setText("Address :");

        lblSearchTelephone.setText("Telephone :");

        lblSearchEMail.setText("E-Mail :");

        txtSearchMemberId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchMemberIdKeyReleased(evt);
            }
        });

        txtSearchName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchNameKeyReleased(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnSearchMemberUpdate.setText("Update");
        btnSearchMemberUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchMemberUpdateActionPerformed(evt);
            }
        });

        btnSearchMemberDelete.setText("Delete");
        btnSearchMemberDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchMemberDeleteActionPerformed(evt);
            }
        });

        btnSearchMemberClear.setText("Clear");
        btnSearchMemberClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchMemberClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(btnSearchMemberUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addComponent(btnSearchMemberDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearchMemberClear)
                .addGap(32, 32, 32))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchMemberUpdate)
                    .addComponent(btnSearchMemberClear)
                    .addComponent(btnSearchMemberDelete))
                .addContainerGap())
        );

        lblSearchFeedBacks.setText("Feed Backs on student :");

        txtFeedBacks.setColumns(20);
        txtFeedBacks.setRows(5);
        txtFeedBacks.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFeedBacksKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(txtFeedBacks);

        cmbMemberType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "[Select Type]" }));
        cmbMemberType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMemberTypeActionPerformed(evt);
            }
        });

        cmbGender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Gender", "Male", "Female", "Other" }));
        cmbGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGenderActionPerformed(evt);
            }
        });

        txtSearchAddress.setColumns(20);
        txtSearchAddress.setRows(5);
        txtSearchAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchAddressKeyReleased(evt);
            }
        });
        jScrollPane8.setViewportView(txtSearchAddress);

        javax.swing.GroupLayout pnlSearchMemberLayout = new javax.swing.GroupLayout(pnlSearchMember);
        pnlSearchMember.setLayout(pnlSearchMemberLayout);
        pnlSearchMemberLayout.setHorizontalGroup(
            pnlSearchMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchMemberLayout.createSequentialGroup()
                .addGroup(pnlSearchMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSearchMemberLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlSearchMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlSearchMemberLayout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(pnlSearchMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblSearchEMail)
                                    .addComponent(lblSearchGender)
                                    .addComponent(lblSearchDob)
                                    .addComponent(lblSearchSurname)
                                    .addComponent(lblSearchAddress)
                                    .addComponent(lblSearchTelephone)
                                    .addComponent(lblSearchMemberId)))
                            .addGroup(pnlSearchMemberLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(lblSearchMemberType)))
                        .addGroup(pnlSearchMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlSearchMemberLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlSearchMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSearchMemberId, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                                    .addComponent(txtSearchTelephone, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                                    .addComponent(dtDob, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                                    .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSearchEMail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                                    .addComponent(txtSearchName, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)))
                            .addGroup(pnlSearchMemberLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(cmbMemberType, 0, 230, Short.MAX_VALUE))))
                    .addGroup(pnlSearchMemberLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnlSearchMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSearchFeedBacks))
                .addContainerGap())
        );
        pnlSearchMemberLayout.setVerticalGroup(
            pnlSearchMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchMemberLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSearchMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlSearchMemberLayout.createSequentialGroup()
                        .addGroup(pnlSearchMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbMemberType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSearchMemberType))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlSearchMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSearchMemberId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSearchMemberId))
                        .addGap(8, 8, 8))
                    .addGroup(pnlSearchMemberLayout.createSequentialGroup()
                        .addComponent(lblSearchFeedBacks)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(pnlSearchMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlSearchMemberLayout.createSequentialGroup()
                        .addGroup(pnlSearchMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSearchSurname)
                            .addComponent(txtSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlSearchMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSearchDob)
                            .addComponent(dtDob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlSearchMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSearchGender))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlSearchMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSearchAddress)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(pnlSearchMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSearchTelephone)
                            .addComponent(txtSearchTelephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlSearchMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSearchEMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSearchEMail))
                        .addGap(65, 65, 65))
                    .addComponent(jScrollPane3))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSearchMemberLayout.createSequentialGroup()
                .addContainerGap(294, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        tblResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Member ID", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblResult.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblResultMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblResult);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlSearchMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlSearchMember, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(79, 79, 79))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchMemberUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchMemberUpdateActionPerformed
        int i = JOptionPane.showConfirmDialog(null, "Member details will change to \n current data.\nProceed?", "Confirm", JOptionPane.YES_NO_OPTION);
        if (i == JOptionPane.YES_OPTION) {

            m.address = txtSearchAddress.getText();
            m.dob = new Date(dtDob.getSelectedDate().getTimeInMillis());
            m.email = txtSearchEMail.getText();
            m.feedBack = txtFeedBacks.getText();
            m.gender = cmbGender.getSelectedItem().toString().charAt(0);
            m.name = txtSearchName.getText();
            m.tp = txtSearchTelephone.getText();
            m.userName = txtSearchMemberId.getText();
            m.userType = cmbMemberType.getSelectedItem().toString();
            try {
                if (m.userName.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Member ID cannot be empty...");
                } else {
                    updateData(m);
                    JOptionPane.showMessageDialog(null, "Update success");
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error occured while updating member..");
                Logger.getLogger(MemberSearch.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}//GEN-LAST:event_btnSearchMemberUpdateActionPerformed

    private void btnSearchMemberClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchMemberClearActionPerformed
        txtSearchMemberId.setText("");
        txtSearchName.setText("");
        txtSearchAddress.setText("");
        txtSearchTelephone.setText("");
        txtSearchEMail.setText("");
        txtFeedBacks.setText("");
        m.reset();
}//GEN-LAST:event_btnSearchMemberClearActionPerformed

    private void tblResultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblResultMouseClicked
        if (evt.getClickCount() == 2 && tblResult.getSelectedRowCount() > 0) {
            try {
                Statement stmt = getConnection().createStatement();
                ResultSet rset = stmt.executeQuery("SELECT name, dob, gender, address, tp, email, feedback, member_id "
                        + "FROM member WHERE member_type='" + cmbMemberType.getSelectedItem().toString() + "' AND "
                        + "member_id='" + tblResult.getValueAt(tblResult.getSelectedRow(), 0).toString() + "'");
                if (rset.next()) {
                    txtSearchName.setText(rset.getString(1));
                    Calendar c = Calendar.getInstance();
                    c.setTime(rset.getDate(2));
                    dtDob.setSelectedDate(c);
                    if (rset.getString(3).equals("M")) {
                        cmbGender.setSelectedIndex(1);
                    } else if (rset.getString(3).equals("F")) {
                        cmbGender.setSelectedIndex(2);
                    } else {
                        cmbGender.setSelectedIndex(3);
                    }
                    cmbGender.setSelectedItem(rset.getString(3));
                    txtSearchAddress.setText(rset.getString(4));
                    txtSearchTelephone.setText(rset.getString(5));
                    txtSearchEMail.setText(rset.getString(6));
                    txtFeedBacks.setText(rset.getString(7));
                    txtSearchMemberId.setText(rset.getString(8));
                }
                rset.close();
                stmt.close();
            } catch (Exception ex) {
                Logger.getLogger(BookSearch.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_tblResultMouseClicked

    private void cmbMemberTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMemberTypeActionPerformed
        search();
    }//GEN-LAST:event_cmbMemberTypeActionPerformed

    private void txtSearchMemberIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchMemberIdKeyReleased
        search();
    }//GEN-LAST:event_txtSearchMemberIdKeyReleased

    private void txtSearchNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchNameKeyReleased
        search();
    }//GEN-LAST:event_txtSearchNameKeyReleased

    private void cmbGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGenderActionPerformed
        search();
    }//GEN-LAST:event_cmbGenderActionPerformed

    private void txtSearchAddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchAddressKeyReleased
        search();
    }//GEN-LAST:event_txtSearchAddressKeyReleased

    private void txtFeedBacksKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFeedBacksKeyReleased
        search();
    }//GEN-LAST:event_txtFeedBacksKeyReleased

    private void btnSearchMemberDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchMemberDeleteActionPerformed
        int i = JOptionPane.showConfirmDialog(null, "Are you sure to delete this member..", "Confirm", JOptionPane.YES_NO_OPTION);
        if (i == JOptionPane.YES_OPTION) {
            try {
                deleteData(new Classes.Member(cmbMemberType.getSelectedItem().toString(), txtSearchMemberId.getText()));
                JOptionPane.showMessageDialog(null, "Member details deleted");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error occured while deleting Member..");
                Logger.getLogger(MemberSearch.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}//GEN-LAST:event_btnSearchMemberDeleteActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearchMemberClear;
    private javax.swing.JButton btnSearchMemberDelete;
    private javax.swing.JButton btnSearchMemberUpdate;
    private javax.swing.JComboBox cmbGender;
    public javax.swing.JComboBox cmbMemberType;
    private datechooser.beans.DateChooserCombo dtDob;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel lblSearchAddress;
    private javax.swing.JLabel lblSearchDob;
    private javax.swing.JLabel lblSearchEMail;
    private javax.swing.JLabel lblSearchFeedBacks;
    private javax.swing.JLabel lblSearchGender;
    private javax.swing.JLabel lblSearchMemberId;
    private javax.swing.JLabel lblSearchMemberType;
    private javax.swing.JLabel lblSearchSurname;
    private javax.swing.JLabel lblSearchTelephone;
    private javax.swing.JPanel pnlSearchMember;
    private javax.swing.JTable tblResult;
    private javax.swing.JTextArea txtFeedBacks;
    private javax.swing.JTextArea txtSearchAddress;
    private javax.swing.JTextField txtSearchEMail;
    private javax.swing.JTextField txtSearchMemberId;
    private javax.swing.JTextField txtSearchName;
    private javax.swing.JTextField txtSearchTelephone;
    // End of variables declaration//GEN-END:variables
}
